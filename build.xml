<?xml version="1.0" encoding="UTF-8"?>
<project name="administratorti" default="all">
  
  
  <property file="administratorti.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.swc"/>
    <include name="*.zip"/>
    <include name="*.egg"/>
    <include name="*.ear"/>
    <include name="*.ane"/>
    <include name="*.jar"/>
    <include name="*.klib"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
  </patternset>
  
  
  <!-- Project Libraries -->
  
  <path id="library.com.google.code.gson:gson:2.8.5.classpath">
    <pathelement location="${basedir}/lib/gson-2.8.5.jar"/>
  </path>
  
  <path id="library.com.twelvemonkeys.imageio:imageio-tiff:3.4.2.classpath">
    <pathelement location="${basedir}/lib/common-image-3.4.2.jar"/>
    <pathelement location="${basedir}/lib/common-io-3.4.2.jar"/>
    <pathelement location="${basedir}/lib/common-lang-3.4.2.jar"/>
    <pathelement location="${basedir}/lib/imageio-core-3.4.2.jar"/>
    <pathelement location="${basedir}/lib/imageio-metadata-3.4.2.jar"/>
    <pathelement location="${basedir}/lib/imageio-tiff-3.4.2.jar"/>
  </path>
  
  <path id="library.lib.classpath">
    <fileset dir="${basedir}/../../../../Program Files/Java/openjfx-13.0.1.bin-sdk/javafx-sdk-13.0.1/lib">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  <path id="library.org.apache.pdfbox:pdfbox-tools:2.0.16.classpath">
    <pathelement location="${basedir}/lib/commons-logging-1.2.jar"/>
    <pathelement location="${basedir}/lib/fontbox-2.0.16.jar"/>
    <pathelement location="${basedir}/lib/pdfbox-2.0.16.jar"/>
    <pathelement location="${basedir}/lib/pdfbox-debugger-2.0.16.jar"/>
    <pathelement location="${basedir}/lib/pdfbox-tools-2.0.16.jar"/>
  </path>
  
  <path id="library.org.apache.pdfbox:pdfbox:2.0.16.classpath">
    <pathelement location="${basedir}/lib/commons-logging-1.2.jar"/>
    <pathelement location="${basedir}/lib/fontbox-2.0.16.jar"/>
    <pathelement location="${basedir}/lib/pdfbox-2.0.16.jar"/>
  </path>
  
  <!-- Modules -->
  
  
  <!-- Module AdministratorTI -->
  
  <dirname property="module.administratorti.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.administratorti" value="-encoding UTF-8 -source 13 -target 13 ${compiler.args}"/>
  
  <property name="administratorti.output.dir" value="${module.administratorti.basedir}/out/production/AdministratorTI"/>
  <property name="administratorti.testoutput.dir" value="${module.administratorti.basedir}/out/test/AdministratorTI"/>
  
  <path id="administratorti.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="administratorti.module.production.classpath">
    <path refid="library.org.apache.pdfbox:pdfbox:2.0.16.classpath"/>
    <path refid="library.org.apache.pdfbox:pdfbox-tools:2.0.16.classpath"/>
    <path refid="library.com.twelvemonkeys.imageio:imageio-tiff:3.4.2.classpath"/>
    <path refid="library.com.google.code.gson:gson:2.8.5.classpath"/>
    <path refid="library.lib.classpath"/>
  </path>
  
  <path id="administratorti.runtime.production.module.classpath">
    <pathelement location="${administratorti.output.dir}"/>
    <path refid="library.org.apache.pdfbox:pdfbox:2.0.16.classpath"/>
    <path refid="library.org.apache.pdfbox:pdfbox-tools:2.0.16.classpath"/>
    <path refid="library.com.twelvemonkeys.imageio:imageio-tiff:3.4.2.classpath"/>
    <path refid="library.com.google.code.gson:gson:2.8.5.classpath"/>
    <path refid="library.lib.classpath"/>
  </path>
  
  <path id="administratorti.module.classpath">
    <pathelement location="${administratorti.output.dir}"/>
    <path refid="library.org.apache.pdfbox:pdfbox:2.0.16.classpath"/>
    <path refid="library.org.apache.pdfbox:pdfbox-tools:2.0.16.classpath"/>
    <path refid="library.com.twelvemonkeys.imageio:imageio-tiff:3.4.2.classpath"/>
    <path refid="library.com.google.code.gson:gson:2.8.5.classpath"/>
    <path refid="library.lib.classpath"/>
  </path>
  
  <path id="administratorti.runtime.module.classpath">
    <pathelement location="${administratorti.testoutput.dir}"/>
    <pathelement location="${administratorti.output.dir}"/>
    <path refid="library.org.apache.pdfbox:pdfbox:2.0.16.classpath"/>
    <path refid="library.org.apache.pdfbox:pdfbox-tools:2.0.16.classpath"/>
    <path refid="library.com.twelvemonkeys.imageio:imageio-tiff:3.4.2.classpath"/>
    <path refid="library.com.google.code.gson:gson:2.8.5.classpath"/>
    <path refid="library.lib.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.administratorti">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.administratorti">
    <patternset refid="excluded.from.module.administratorti"/>
  </patternset>
  
  <path id="administratorti.module.sourcepath">
    <dirset dir="${module.administratorti.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.administratorti" depends="compile.module.administratorti.production,compile.module.administratorti.tests" description="Compile module AdministratorTI"/>
  
  <target name="compile.module.administratorti.production" description="Compile module AdministratorTI; production classes">
    <mkdir dir="${administratorti.output.dir}"/>
    <javac destdir="${administratorti.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.administratorti}"/>
      <bootclasspath refid="administratorti.module.bootclasspath"/>
      <classpath refid="administratorti.module.production.classpath"/>
      <src refid="administratorti.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.administratorti"/>
    </javac>
    
    <copy todir="${administratorti.output.dir}">
      <fileset dir="${module.administratorti.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.administratorti.tests" depends="compile.module.administratorti.production" description="compile module AdministratorTI; test classes" unless="skip.tests"/>
  
  <target name="clean.module.administratorti" description="cleanup module">
    <delete dir="${administratorti.output.dir}"/>
    <delete dir="${administratorti.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.administratorti" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.administratorti" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.administratorti:jar" value="${basedir}/out/artifacts/AdministratorTI_jar"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.AdministratorTI.jar" value="${artifacts.temp.dir}/AdministratorTI.jar"/>
  </target>
  
  <target name="artifact.administratorti:jar" depends="init.artifacts, compile.module.administratorti" description="Build &#39;AdministratorTI:jar&#39; artifact">
    <property name="artifact.temp.output.administratorti:jar" value="${artifacts.temp.dir}/AdministratorTI_jar"/>
    <mkdir dir="${artifact.temp.output.administratorti:jar}"/>
    <jar destfile="${temp.jar.path.AdministratorTI.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${administratorti.output.dir}"/>
      <zipfileset src="${basedir}/../../../../Program Files/Java/openjfx-13.0.1.bin-sdk/javafx-sdk-13.0.1/lib/src.zip"/>
      <zipfileset src="${basedir}/../../../../Program Files/Java/openjfx-13.0.1.bin-sdk/javafx-sdk-13.0.1/lib/javafx-swt.jar"/>
      <zipfileset src="${basedir}/../../../../Program Files/Java/openjfx-13.0.1.bin-sdk/javafx-sdk-13.0.1/lib/javafx.web.jar"/>
      <zipfileset src="${basedir}/../../../../Program Files/Java/openjfx-13.0.1.bin-sdk/javafx-sdk-13.0.1/lib/javafx.base.jar"/>
      <zipfileset src="${basedir}/../../../../Program Files/Java/openjfx-13.0.1.bin-sdk/javafx-sdk-13.0.1/lib/javafx.fxml.jar"/>
      <zipfileset src="${basedir}/../../../../Program Files/Java/openjfx-13.0.1.bin-sdk/javafx-sdk-13.0.1/lib/javafx.media.jar"/>
      <zipfileset src="${basedir}/../../../../Program Files/Java/openjfx-13.0.1.bin-sdk/javafx-sdk-13.0.1/lib/javafx.swing.jar"/>
      <zipfileset src="${basedir}/../../../../Program Files/Java/openjfx-13.0.1.bin-sdk/javafx-sdk-13.0.1/lib/javafx.controls.jar"/>
      <zipfileset src="${basedir}/../../../../Program Files/Java/openjfx-13.0.1.bin-sdk/javafx-sdk-13.0.1/lib/javafx.graphics.jar"/>
      <zipfileset src="${basedir}/lib/gson-2.8.5.jar"/>
      <zipfileset src="${basedir}/lib/pdfbox-tools-2.0.16.jar"/>
      <zipfileset src="${basedir}/lib/pdfbox-debugger-2.0.16.jar"/>
      <zipfileset src="${basedir}/lib/pdfbox-2.0.16.jar"/>
      <zipfileset src="${basedir}/lib/fontbox-2.0.16.jar"/>
      <zipfileset src="${basedir}/lib/commons-logging-1.2.jar"/>
      <zipfileset src="${basedir}/lib/imageio-tiff-3.4.2.jar"/>
      <zipfileset src="${basedir}/lib/imageio-core-3.4.2.jar"/>
      <zipfileset src="${basedir}/lib/imageio-metadata-3.4.2.jar"/>
      <zipfileset src="${basedir}/lib/common-lang-3.4.2.jar"/>
      <zipfileset src="${basedir}/lib/common-io-3.4.2.jar"/>
      <zipfileset src="${basedir}/lib/common-image-3.4.2.jar"/>
      <manifest>
        <attribute name="Main-Class" value="MainWindow.Main"/>
      </manifest>
    </jar>
    <copy file="${temp.jar.path.AdministratorTI.jar}" tofile="${artifact.temp.output.administratorti:jar}/AdministratorTI.jar"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.administratorti:jar" description="Build all artifacts">
    <mkdir dir="${artifact.output.administratorti:jar}"/>
    <copy todir="${artifact.output.administratorti:jar}">
      <fileset dir="${artifact.temp.output.administratorti:jar}"/>
    </copy>
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>